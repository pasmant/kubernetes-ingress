name: "Release NGINX Ingress Controller OSS Images"

on:
  workflow_dispatch:
    inputs:
      gcr_release_registry:
        required: true
        type: boolean
      ecr_public_registry:
        required: true
        type: boolean
      dockerhub_public_registry:
        required: true
        type: boolean
      quay_public_registry:
        required: true
        type: boolean
      github_public_registry:
        required: true
        type: boolean
      source_tag:
        required: true
        type: string
      target_tag:
        required: true
        type: string
      short_target_tag:
        type: string
        default: ''
      dry_run:
        type: boolean
        default: false
  workflow_call:
    inputs:
      gcr_release_registry:
        required: true
        type: boolean
      ecr_public_registry:
        required: true
        type: boolean
      dockerhub_public_registry:
        required: true
        type: boolean
      quay_public_registry:
        required: true
        type: boolean
      github_public_registry:
        required: true
        type: boolean
      source_tag:
        required: true
        type: string
      target_tag:
        required: true
        type: string
      short_target_tag:
        type: string
        default: ''
      dry_run:
        type: boolean
        default: false

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  release-to-gcr-release-registry:
    name: Push images to the GCR Release Registry
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    if: ${{ inputs.gcr_release_registry }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Authenticate to Google Cloud
        id: gcr-auth
        uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}

      - name: Login to GCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.gcr-auth.outputs.access_token }}

      - name: Publish OSS images
        run: |
          export CONFIG_PATH=.github/config/config-oss-gcr-release
          export SOURCE_TAG=${{ inputs.source_tag }}
          export TARGET_TAG=${{ inputs.target_tag }}
          if ${{ inputs.dry_run }}; then
            export DRY_RUN=true
          fi
          if [ "${{ inputs.short_target_tag }}" != "" ]; then
            export ADDITIONAL_TAG=${{ inputs.short_target_tag }}
          fi
          .github/scripts/copy-images.sh

  release-oss-to-ecr-public-registry:
    name: Push OSS images to the AWS Public Registry
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    if: ${{ inputs.ecr_public_registry }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Authenticate to Google Cloud
        id: gcr-auth
        uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}

      - name: Login to GCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.gcr-auth.outputs.access_token }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_PUBLIC_ECR }}

      - name: Login to Public ECR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: public.ecr.aws

      - name: Publish images
        run: |
          export CONFIG_PATH=.github/config/config-oss-ecr
          export SOURCE_TAG=${{ inputs.source_tag }}
          export TARGET_TAG=${{ inputs.target_tag }}
          if [ "${{ inputs.short_target_tag }}" != "" ]; then
            export ADDITIONAL_TAG=${{ inputs.short_target_tag }}
          fi
          if ${{ inputs.dry_run }}; then
            export DRY_RUN=true
          fi
          .github/scripts/copy-images.sh

  release-oss-to-dockerhub-public-registry:
    name: Push OSS images to the DockerHub Public Registry
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    if: ${{ inputs.dockerhub_public_registry }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Authenticate to Google Cloud
        id: gcr-auth
        uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}

      - name: Login to GCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.gcr-auth.outputs.access_token }}

      - name: DockerHub Login
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish images
        run: |
          export CONFIG_PATH=.github/config/config-oss-dockerhub
          export SOURCE_TAG=${{ inputs.source_tag }}
          export TARGET_TAG=${{ inputs.target_tag }}
          if [ "${{ inputs.short_target_tag }}" != "" ]; then
            export ADDITIONAL_TAG=${{ inputs.short_target_tag }}
          fi
          if ${{ inputs.dry_run }}; then
            export DRY_RUN=true
          fi
          .github/scripts/copy-images.sh

  release-oss-to-quay-public-registry:
    name: Push OSS images to the Quay Public Registry
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    if: ${{ inputs.quay_public_registry }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Authenticate to Google Cloud
        id: gcr-auth
        uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}

      - name: Login to GCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.gcr-auth.outputs.access_token }}

      - name: Login to Quay.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Publish images
        run: |
          export CONFIG_PATH=.github/config/config-oss-quay
          export SOURCE_TAG=${{ inputs.source_tag }}
          export TARGET_TAG=${{ inputs.target_tag }}
          if [ "${{ inputs.short_target_tag }}" != "" ]; then
            export ADDITIONAL_TAG=${{ inputs.short_target_tag }}
          fi
          if ${{ inputs.dry_run }}; then
            export DRY_RUN=true
          fi
          .github/scripts/copy-images.sh

  release-oss-to-github-public-registry:
    name: Push OSS images to the GitHub Public Registry
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
      packages: write
    if: ${{ inputs.github_public_registry }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Authenticate to Google Cloud
        id: gcr-auth
        uses: google-github-actions/auth@62cf5bd3e4211a0a0b51f2c6d6a37129d828611d # v2.1.5
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCR_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCR_SERVICE_ACCOUNT }}

      - name: Login to GCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.gcr-auth.outputs.access_token }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish images
        run: |
          export CONFIG_PATH=.github/config/config-oss-github
          export SOURCE_TAG=${{ inputs.source_tag }}
          export TARGET_TAG=${{ inputs.target_tag }}
          if [ "${{ inputs.short_target_tag }}" != "" ]; then
            export ADDITIONAL_TAG=${{ inputs.short_target_tag }}
          fi
          if ${{ inputs.dry_run }}; then
            export DRY_RUN=true
          fi
          .github/scripts/copy-images.sh
